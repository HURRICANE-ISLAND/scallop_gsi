knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
library(ggpubr)
library(patchwork)
library(hrbrthemes)
library(ggthemes)
# Set a custom theme for ggplot
theme_set(theme_tufte())
theme_update(plot.title =element_text(hjust=0.5),
axis.line.x = element_line(color="black", size=1),
element_line(color="black", size=1),
text = element_text(size=20),
axis.text = element_text(size=15))
# Load the data set
datlarge <- read_csv("GSI.tidy.csv")
# Data transformation
datlarge <- datlarge %>%
mutate(
# Setting categorical variables as factors
Site = as.factor(Site),
Gear_Type = as.factor(Gear_Type),
Level_Position = as.factor(Level_Position),
Sex = as.factor(Sex),
Meat_Color = as.factor(Meat_Color),
Year = as.factor(Year),
# Setting Date as date
Date = as.Date(Date),
# Creating a new variable "type" based on the condition "Gear_Type";
# if Lantern_Net or Cage, type = Farm | if not, type = Wild
type = if_else(Gear_Type %in% c("Lantern_Net", "Cage"), "Farm", "Wild")
)
# Data cleaning
# dat large includes data from 2019-2022 & all gear types
# dat removes (1) 2019 data, (2) cage data, & (3) 1 week of mis-entered data in 2022
# Filtering out above data types
datlarge %>%
filter(Year != 2019,
Gear_Type != "Cage",
Date != "2022-06-28") ->
dat
# Define shell size classes
dat$sc <- cut(dat$Shell_Height,
breaks = c(30, 50, 60, 70, 80, 90, 100, 110, Inf),
labels = c("<50", "50-59", "60-69", "70-79", "80-89", "90-99", "100-109", ">110"),
include.lowest = FALSE)
dat$sc <- as.factor(dat$sc)
summary(dat$sc)
###=========================================###
### Figures from Sea-Bird CTD data ###
###=========================================###
# FOR CREATING AN R MARKDOWN PDF:
# Easiest way is to >File >Compile Report... >MS Word >Compile
# ...or...
# If you need to install R markdown
# install.packages("rmarkdown")
# library(rmarkdown)
# If you need to install knitr (for R markdown)
# install.packages("knitr")
# library(knitr)
# install.packages('tinytex')
# tinytex::install_tinytex()
# rmarkdown::render("Supplemental.Figures.R", output_format="word_document")
#............................................................................
# Make sure you have everything you need to do this:
#............................................................................
# If you need to install ggplot2 (package used to make plots)
# install.packages("ggplot2")
library(ggplot2)
# If you need to install tidyverse (package used to read excel files into R)
# install.packages(“tidyverse”)
library(tidyverse)
# If you need to install oce (package used to select dates)
# install.packages("oce”)
library(oce)
# If you need to install gsw
# install.packages(“gsw”)
library(gsw)
# If you need to install leaflet (package used to subset and group data)
# install.packages(“leaflet”)
library(leaflet)
# If you need to install couplet (package used to subset and group data)
# install.packages(“couplet”)
library(cowplot)
#............................................................................
# To begin:
#............................................................................
# If you want use the metadata file...
# Set the working directory
#setwd("/Users/sean/Desktop/R_code_SPO/)
# Load .cnv data file
#ctd = read.ctd("./20230902 Station 5 Deep_proc.cnv")
ctd = read_csv("CTD_Practice.csv")
setwd("Users/phoebejekielek/Desktop/CTD_Practice.csv")
setwd("Users/phoebejekielek/Desktop/CTD_Practice.csv")
library(dplyr)
library(readr)
IndexData <- read_csv("CLEAN_eDNA_Index.csv") ## Index DATA
names(IndexData)
Index <- IndexData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "Index") #add back in site name
Index
HIFarmData<- read_csv("HIFarm_Sonde.csv")
HIFarmData<- read_csv("HIFarm_Sonde.csv")
HIFarmData<- read_csv("HIFarm_Sonde.csv")
names(HIFarmData)
HIFarm <- HIFarmData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
ALL_SITES <- rbind(Index, HIFarm)
HIFarm <- HIFarmData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
HIFarmData<- read_csv("HIFarm_Sonde.csv")
names(HIFarmData)
HIFarm <- HIFarmData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
HIFarm
ALL_SITES <- rbind(Index, HIFarm)
ALL_SITES <- rbind(HIFarm)
HIDistData<- read_csv("HIDistant_Sonde.csv")
names(HIDistData)
HIDistData<- read_csv("HIDistant_Sonde.csv")
names(HIDistData)
HIDist <- HIDistData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
HIDist
ALL_SITES <- rbind(HIFarm,HIDist)
#Load HIFarm Data
HIFarmData<- read_csv("HIFarm_Sonde.csv")
names(HIFarmData)
#HIFarm mean data from net depths for each sampling date at HI Farm
HIFarm <- HIFarmData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
HIFarm
HIDistData<- read_csv("HIDistant_Sonde.csv")
names(HIDistData)
#HIDist mean data from net depths for each sampling date at HI Farm
HIDist <- HIDistData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
HIDist
ALL_SITES <- rbind(HIFarm,HIDist)
#Load HIDistant Data
HIDistData<- read_csv("HIDistant_Sonde.csv")
names(HIDistData)
#Load NHFarm Data
HIFarmData<- read_csv("HIFarm_Sonde.csv")
names(HIFarmData)
NHFarmData<- read_csv("HIFarm_Sonde.csv")
names(HIFarmData)
HIFarmData<- read_csv("HIFarm_Sonde.csv")
names(HIFarmData)
#Load NHFarm Data
NHFarmData<- read_csv("NHFarm_Sonde.csv")
names(HIFarmData)
#Load NHDistant Data
NHDistData<- read_csv("NHDistant_Sonde.csv")
names(HIDistData)
#Load NHFarm Data
NHFarmData<- read_csv("NHFarm_Sonde.csv")
names(NHFarmData)
#Load NHDistant Data
NHDistData<- read_csv("NHDistant_Sonde.csv")
names(NHDistData)
#Load STFarm Data
STFarmData<- read_csv("STFarm_Sonde.csv")
names(STFarmData)
#Load STDistant Data
STDistData<- read_csv("STDistant_Sonde.csv")
#Load STDistant Data
STDistData<- read_csv("STDistant_Sonde.csv")
names(STDistData)
STFarm <- STFarmData |>  #data youre feeding it
filter(Depth >= 8 & Depth <= 10) |> #filter to only have net depths at NH
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
#Load STFarm Data
STFarmData<- read_csv("STFarm_Sonde.csv")
names(STFarmData)
#Load STDistant Data
STDistData<- read_csv("STDistant_Sonde.csv")
names(STDistData)
#Load STFarm Data
STFarmData<- read_csv("STFarm_Sonde.csv")
names(STFarmData)
#Load STDistant Data
STDistData<- read_csv("STDistant_Sonde.csv")
names(STDistData)
ALL_SITES <- rbind(HIFarm,HIDist,NHFarm,NHDist,STFarm,STDist)
NHFarm <- NHFarmData |>  #data youre feeding it
filter(Depth >= 5 & Depth <= 7) |> #filter to only have net depths at NH
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
#Load HIFarm Data
HIFarmData<- read_csv("HIFarm_Sonde.csv")
names(HIFarmData)
#Load HIDistant Data
HIDistData<- read_csv("HIDistant_Sonde.csv")
names(HIDistData)
#Load NHFarm Data
NHFarmData<- read_csv("NHFarm_Sonde.csv")
names(NHFarmData)
#Load NHDistant Data
NHDistData<- read_csv("NHDistant_Sonde.csv")
names(NHDistData)
#Load STFarm Data
STFarmData<- read_csv("STFarm_Sonde.csv")
names(STFarmData)
#Load STDistant Data
STDistData<- read_csv("STDistant_Sonde.csv")
names(STDistData)
NHFarm <- NHFarmData |>  #data youre feeding it
filter(Depth >= 5 & Depth <= 7) |> #filter to only have net depths at NH
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
NHFarm
#NHDist mean data from net depths
NHDist <- NHDistData |>  #data youre feeding it
filter(Depth >= 5 & Depth <= 7) |> #filter to only have net depths at NHDist
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
NHDist
#ST Farm mean data from net depths
STFarm <- STFarmData |>  #data youre feeding it
filter(Depth >= 8 & Depth <= 10) |> #filter to only have net depths at NH
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
STFarm
#STDist mean data from net depths
STDist <- STDistData |>  #data youre feeding it
filter(Depth >= 8 & Depth <= 10) |> #filter to only have net depths at NHDist
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
STDist
ALL_SITES <- rbind(HIFarm,HIDist,NHFarm,NHDist,STFarm,STDist)
HIFarm <- HIFarmData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
HIFarm
#HIDist mean data from net depths
HIDist <- HIDistData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
HIDist
## Can I remove NA's or actually tell it that there are NAs?
#NH Farm mean data from net depths
NHFarm <- NHFarmData |>  #data youre feeding it
filter(Depth >= 5 & Depth <= 7) |> #filter to only have net depths at NH
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
NHFarm
#NHDist mean data from net depths
NHDist <- NHDistData |>  #data youre feeding it
filter(Depth >= 5 & Depth <= 7) |> #filter to only have net depths at NHDist
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
NHDist
#ST Farm mean data from net depths
STFarm <- STFarmData |>  #data youre feeding it
filter(Depth >= 8 & Depth <= 10) |> #filter to only have net depths at NH
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
STFarm
#STDist mean data from net depths
STDist <- STDistData |>  #data youre feeding it
filter(Depth >= 8 & Depth <= 10) |> #filter to only have net depths at NHDist
group_by(Date) |> #group by date
summarise_all(mean) |> #summarize mean each column by date
mutate(`Site` = "HI Farm") #add back in site name
STDist
ALL_SITES <- rbind(HIFarm,HIDist,NHFarm,NHDist,STFarm,STDist)
ALL_SITES <- rbind(HIFarm,HIDist)
ALL_SITES <- rbind(HIFarm,HIDist)
ALL_SITES <- rbind(HIFarm,HIDist)
ALL_SITES <- rbind(HIFarm,HIDist,NHFarm)
names(NHFarmData)
names(HIDistData)
names(HIFarmData)
names(NHDistData)
names(NHFarmData)
names(NHDistData)
names(STFarmData)
names(STDistData)
ALL_SITES <- rbind(HIFarm,HIDist,NHDist)
ALL_SITES <- rbind(HIFarm,HIDist,STDist)
#Index Site Data
IndexData <- read_csv("CLEAN_eDNA_Index.csv") ## Index DATA
names(IndexData)
#Load HIFarm Data
HIFarmData<- read_csv("HIFarm_Sonde.csv")
names(HIFarmData)
#Load HIDistant Data
HIDistData<- read_csv("HIDistant_Sonde.csv")
names(HIDistData)
#Load NHFarm Data
NHFarmData<- read_csv("NHFarm_Sonde.csv")
names(NHFarmData)
#Load NHDistant Data
NHDistData<- read_csv("NHDistant_Sonde.csv")
names(NHDistData)
#Load STFarm Data
STFarmData<- read_csv("STFarm_Sonde.csv")
names(STFarmData)
#Load STDistant Data
STDistData<- read_csv("STDistant_Sonde.csv")
names(STDistData)
#NH Farm mean data from net depths
NHFarm <- NHFarmData |>  #data youre feeding it
filter(Depth >= 5 & Depth <= 7) |> #filter to only have net depths at NH
group_by(Date) |> #group by date
summarise_all(calculate_mean_without_na) %>% #AMH change to calculate means without NAs
mutate(`Site` = "NH Farm") #add back in site name
calculate_mean_without_na <- function(x) {
mean(x, na.rm = TRUE)}
Index <- IndexData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(calculate_mean_without_na) %>% #AMH change to calculate means without NAs
mutate(`Site` = "Index") #add back in site name
Index
#HIFarm mean data from net depths
HIFarm <- HIFarmData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(calculate_mean_without_na) %>% #AMH change to calculate means without NAs
mutate(`Site` = "HI Farm") #add back in site name
HIFarm
#HIDist mean data from net depths
HIDist <- HIDistData |>  #data youre feeding it
filter(Depth >= 4 & Depth <= 6) |> #filter to only have certain depths
group_by(Date) |> #group by date
summarise_all(calculate_mean_without_na) %>% #AMH change to calculate means without NAs
mutate(`Site` = "HI Distant") #add back in site name
HIDist
## Can I remove NA's or actually tell it that there are NAs? AMH - Yes, I wrote a function above to remove NAs when calculating the mean. If
## they are missing, they will now appear as NaN
#NH Farm mean data from net depths
NHFarm <- NHFarmData |>  #data youre feeding it
filter(Depth >= 5 & Depth <= 7) |> #filter to only have net depths at NH
group_by(Date) |> #group by date
summarise_all(calculate_mean_without_na) %>% #AMH change to calculate means without NAs
mutate(`Site` = "NH Farm") #add back in site name
NHFarm
#NHDist mean data from net depths
NHDist <- NHDistData |>  #data youre feeding it
filter(Depth >= 5 & Depth <= 7) |> #filter to only have net depths at NHDist
group_by(Date) |> #group by date
summarise_all(calculate_mean_without_na) %>% #AMH change to calculate means without NAs
mutate(`Site` = "NH Distant") #add back in site name
NHDist
#ST Farm mean data from net depths
STFarm <- STFarmData |>  #data youre feeding it
filter(Depth >= 8 & Depth <= 10) |> #filter to only have net depths at NH
group_by(Date) |> #group by date
summarise_all(calculate_mean_without_na) %>% #AMH change to calculate means without NAs
mutate(`Site` = "ST Farm") #add back in site name
STFarm
#STDist mean data from net depths
STDist <- STDistData |>  #data youre feeding it
filter(Depth >= 8 & Depth <= 10) |> #filter to only have net depths at NHDist
group_by(Date) |> #group by date
summarise_all(calculate_mean_without_na) %>% #AMH change to calculate means without NAs
mutate(`Site` = "ST Distant") #add back in site name
STDist
combined_data <- bind_rows(HIFarm, HIDist, NHFarm, NHDist, STFarm, STDist)
head(combined_data)
head(combined_data)
source("~/Documents/GitHub/scallop_gsi/PheobeSondData.R")
combined_data
library("writexl")
install.packages("writexl")
write_xlsx(combined_data, “/Users/phoebejekielek/Documents/GitHub/scallop_gsi/combined_data.xlsx”)
write_xlsx(combined_data, "/Users/phoebejekielek/Documents/GitHub/scallop_gsi/combined_data.xlsx”)
write_xlsx(combined_data, "/Users/phoebejekielek/Documents/GitHub/scallop_gsi/combined_data.xlsx")
write_xlsx(combined_data, "/Users/phoebejekielek/Documents/GitHub/scallop_gsi/combined_data.xlsx")
write_xlsx(combined_data, "/Users/phoebejekielek/Documents/GitHub/scallop_gsi/combined_data.xlsx")
install.packages("writexl")
library(writexl)
write_xlsx(combined_data, "/Users/phoebejekielek/Documents/GitHub/scallop_gsi/combined_data.xlsx")
install.packages(c("ggplot2", "vcfR", "reshape2", "adegenet", "hierfstat", "pcadapt", "tidyr"))
install.packages(c("ggplot2", "vcfR", "reshape2", "adegenet", "hierfstat", "pcadapt", "tidyr"))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(ggplot2)
my_scatplot<-ggplot(mtcars, aes(x=wy, y=mpg, col=cyl))+geom_point
library(ggplot2)
write.csv(combined_data,file = "Sonde_env_Means.csv")
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
#library(tidyverse)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(ggplot2)
